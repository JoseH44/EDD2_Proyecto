package edd2_proyecto_;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import  java.io.BufferedWriter ;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import  java.io.File ;
import  java.io.FileNotFoundException ;
import java.io.FileOutputStream;
import  java.io.FileWriter ;
import  java.io.IOException ;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.RandomAccessFile;
import  java.text.ParseException ;
import java.util.Collections;
import  java.util.Scanner ;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.CellEditor;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;

import javax.swing.event.CellEditorListener;
import javax.swing.event.ChangeEvent;

import javax.swing.filechooser.FileNameExtensionFilter;

import javax.swing.table.TableModel;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Text;

public class Ventana_Principal extends javax.swing.JFrame {

    /**
     * Creates new form Ventana_Principal
     */
    public Ventana_Principal() {
        initComponents();
        this.setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_Archivo = new javax.swing.JDialog();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        bt_Nuevo = new javax.swing.JButton();
        bt_Cargar = new javax.swing.JButton();
        bt_Cerrar = new javax.swing.JButton();
        bt_Salvar = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jd_Campos = new javax.swing.JDialog();
        jPanel7 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jb_CrearCampo = new javax.swing.JButton();
        jb_ListarCampos = new javax.swing.JButton();
        jb_ModificarCampos = new javax.swing.JButton();
        jb_BorrarCampos = new javax.swing.JButton();
        jb_SalirdeCampos = new javax.swing.JButton();
        jd_Registros = new javax.swing.JDialog();
        jPanel8 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jb_ModificarRegistros = new javax.swing.JButton();
        jb_IntroducirRegistros = new javax.swing.JButton();
        jb_BuscarRegistros = new javax.swing.JButton();
        jb_BorrarRegistros = new javax.swing.JButton();
        jb_ListarRegistros = new javax.swing.JButton();
        jb_SalirDeRegistros = new javax.swing.JButton();
        bt_cruzar = new javax.swing.JButton();
        jd_indices = new javax.swing.JDialog();
        jPanel9 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jb_CrearIndice = new javax.swing.JButton();
        jb_ReIndexarArchivos = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jd_Estandarizacion = new javax.swing.JDialog();
        jPanel10 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jb_ExportarExcel = new javax.swing.JButton();
        jb_ExportarlXMLconSch = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jd_CrearCampo = new javax.swing.JDialog();
        jPanel14 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        tf_NombredelCampo = new javax.swing.JTextField();
        jl_nameCampo = new javax.swing.JLabel();
        label_llavePrim = new javax.swing.JLabel();
        rb_key_si = new javax.swing.JRadioButton();
        rb_key_no = new javax.swing.JRadioButton();
        jl_longitud = new javax.swing.JLabel();
        sp_LongitudCampo = new javax.swing.JSpinner();
        label_llaveCandi = new javax.swing.JLabel();
        rb_cand_si = new javax.swing.JRadioButton();
        rb_cand_no = new javax.swing.JRadioButton();
        jl_tipodevariable = new javax.swing.JLabel();
        rb_tip_string = new javax.swing.JRadioButton();
        rb_tip_integer = new javax.swing.JRadioButton();
        jb_TerminarCreacionCampo = new javax.swing.JButton();
        jb_RegresarDeCrearCampo = new javax.swing.JButton();
        bg_TipoDeVariable = new javax.swing.ButtonGroup();
        bg_LlavePrimaria = new javax.swing.ButtonGroup();
        jd_ModificarCampo = new javax.swing.JDialog();
        jPanel11 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt_Campos = new javax.swing.JTable();
        jb_RegresarDeCampos = new javax.swing.JButton();
        jb_CampoModificar = new javax.swing.JButton();
        jd_ListarCampos = new javax.swing.JDialog();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jt_ListaDeCampos = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jb_RegresarDeListarC = new javax.swing.JButton();
        jd_EliminarCampos = new javax.swing.JDialog();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jt_EliminarCampos = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jb_RegresaDeEliminarCampos = new javax.swing.JButton();
        jb_EliminarCampoSelec = new javax.swing.JButton();
        jd_DatosDelCampo = new javax.swing.JDialog();
        jPanel15 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        rb_InfoIntegerCampo = new javax.swing.JRadioButton();
        rb_InfoStringCampo = new javax.swing.JRadioButton();
        tf_InfoNombreCampo = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        js_InfoLongitudCampo = new javax.swing.JSpinner();
        jb_InfoAceptarCambiosDatos = new javax.swing.JButton();
        jb_RegresarDeDatosCampo = new javax.swing.JButton();
        jd_nombre = new javax.swing.JDialog();
        jPanel16 = new javax.swing.JPanel();
        tf_nombreArchivo = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        bg_InfoTipoDatos = new javax.swing.ButtonGroup();
        jd_IntroducirString = new javax.swing.JDialog();
        jPanel17 = new javax.swing.JPanel();
        jt_String = new javax.swing.JTextField();
        jl_string = new javax.swing.JLabel();
        jp_progreso = new javax.swing.JProgressBar();
        jButton4 = new javax.swing.JButton();
        jd_MBL = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jt_Registros = new javax.swing.JTable();
        jb_RegresardeTablaRegistro = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jb_eliminarRegistro = new javax.swing.JButton();
        jd_BuscarRegistros = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        bg_LlaveCandidata = new javax.swing.ButtonGroup();
        jd_IntroducirInteger = new javax.swing.JDialog();
        jPanel18 = new javax.swing.JPanel();
        jf_Integer = new javax.swing.JFormattedTextField();
        jl_Integer = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jp_Integer = new javax.swing.JProgressBar();
        jd_IntroducirRegistros = new javax.swing.JDialog();
        jPanel19 = new javax.swing.JPanel();
        jd_NameParaXML = new javax.swing.JDialog();
        jPanel20 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jt_NombreXML = new javax.swing.JTextField();
        jb_CrearArchivoXML = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jb_Salir1 = new javax.swing.JButton();
        jb_Indices = new javax.swing.JButton();
        jb_Campos = new javax.swing.JButton();
        jb_Archivo = new javax.swing.JButton();
        jb_Registros = new javax.swing.JButton();
        jb_Estandarizacion = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jd_Archivo.setBackground(new java.awt.Color(0, 0, 204));
        jd_Archivo.setForeground(new java.awt.Color(0, 0, 204));
        jd_Archivo.setUndecorated(true);

        jPanel6.setBackground(new java.awt.Color(0, 204, 204));
        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel2.setText("Archivo");

        bt_Nuevo.setBackground(new java.awt.Color(204, 255, 255));
        bt_Nuevo.setText("Nuevo Archivo");
        bt_Nuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_NuevoMouseClicked(evt);
            }
        });

        bt_Cargar.setBackground(new java.awt.Color(204, 255, 255));
        bt_Cargar.setText("Cargar Archivo");
        bt_Cargar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_CargarMouseClicked(evt);
            }
        });

        bt_Cerrar.setBackground(new java.awt.Color(204, 255, 255));
        bt_Cerrar.setText("Cerrar Archivo");
        bt_Cerrar.setEnabled(false);
        bt_Cerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_CerrarMouseClicked(evt);
            }
        });

        bt_Salvar.setBackground(new java.awt.Color(204, 255, 255));
        bt_Salvar.setText("Salvar Archivo");
        bt_Salvar.setEnabled(false);
        bt_Salvar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_SalvarMouseClicked(evt);
            }
        });

        jButton10.setBackground(new java.awt.Color(204, 255, 255));
        jButton10.setText("Regresar");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bt_Nuevo, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                    .addComponent(bt_Cerrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bt_Cargar, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_Salvar, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_Nuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_Cargar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_Salvar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_Cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout jd_ArchivoLayout = new javax.swing.GroupLayout(jd_Archivo.getContentPane());
        jd_Archivo.getContentPane().setLayout(jd_ArchivoLayout);
        jd_ArchivoLayout.setHorizontalGroup(
            jd_ArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jd_ArchivoLayout.setVerticalGroup(
            jd_ArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jd_Campos.setUndecorated(true);

        jPanel7.setBackground(new java.awt.Color(0, 204, 204));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel3.setText("Campos");

        jb_CrearCampo.setBackground(new java.awt.Color(204, 255, 255));
        jb_CrearCampo.setText("Crear Campos");
        jb_CrearCampo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_CrearCampoMouseClicked(evt);
            }
        });

        jb_ListarCampos.setBackground(new java.awt.Color(204, 255, 255));
        jb_ListarCampos.setText("Listar Campos");
        jb_ListarCampos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_ListarCamposMouseClicked(evt);
            }
        });

        jb_ModificarCampos.setBackground(new java.awt.Color(204, 255, 255));
        jb_ModificarCampos.setText("Modificar Campos");
        jb_ModificarCampos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_ModificarCamposMouseClicked(evt);
            }
        });

        jb_BorrarCampos.setBackground(new java.awt.Color(204, 255, 255));
        jb_BorrarCampos.setText("Borrar Campos");
        jb_BorrarCampos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_BorrarCamposMouseClicked(evt);
            }
        });

        jb_SalirdeCampos.setBackground(new java.awt.Color(204, 255, 255));
        jb_SalirdeCampos.setText("Salir");
        jb_SalirdeCampos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_SalirdeCamposMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jb_ModificarCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_CrearCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jb_ListarCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_BorrarCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jb_SalirdeCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(198, 198, 198))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(37, 37, 37)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_ListarCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_CrearCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_ModificarCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_BorrarCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jb_SalirdeCampos)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout jd_CamposLayout = new javax.swing.GroupLayout(jd_Campos.getContentPane());
        jd_Campos.getContentPane().setLayout(jd_CamposLayout);
        jd_CamposLayout.setHorizontalGroup(
            jd_CamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jd_CamposLayout.setVerticalGroup(
            jd_CamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jd_Registros.setUndecorated(true);

        jPanel8.setBackground(new java.awt.Color(0, 204, 204));
        jPanel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel4.setText("Registros");

        jb_ModificarRegistros.setBackground(new java.awt.Color(204, 255, 255));
        jb_ModificarRegistros.setText("Modificar Registros");
        jb_ModificarRegistros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_ModificarRegistrosMouseClicked(evt);
            }
        });

        jb_IntroducirRegistros.setBackground(new java.awt.Color(204, 255, 255));
        jb_IntroducirRegistros.setText("Introducir Registros");
        jb_IntroducirRegistros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_IntroducirRegistrosMouseClicked(evt);
            }
        });

        jb_BuscarRegistros.setBackground(new java.awt.Color(204, 255, 255));
        jb_BuscarRegistros.setText("Buscar Registros");
        jb_BuscarRegistros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_BuscarRegistrosMouseClicked(evt);
            }
        });

        jb_BorrarRegistros.setBackground(new java.awt.Color(204, 255, 255));
        jb_BorrarRegistros.setText("Borrar Registros");
        jb_BorrarRegistros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_BorrarRegistrosMouseClicked(evt);
            }
        });

        jb_ListarRegistros.setBackground(new java.awt.Color(204, 255, 255));
        jb_ListarRegistros.setText("Listar Registros");
        jb_ListarRegistros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_ListarRegistrosMouseClicked(evt);
            }
        });

        jb_SalirDeRegistros.setBackground(new java.awt.Color(204, 255, 255));
        jb_SalirDeRegistros.setText("Salir");
        jb_SalirDeRegistros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_SalirDeRegistrosMouseClicked(evt);
            }
        });

        bt_cruzar.setText("Cruzar Archivo");
        bt_cruzar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_cruzarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jb_IntroducirRegistros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jb_BuscarRegistros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jb_ListarRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(84, 84, 84)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jb_ModificarRegistros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jb_BorrarRegistros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bt_cruzar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(jLabel4))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(jb_SalirDeRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 75, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_IntroducirRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_ModificarRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_BorrarRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_BuscarRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bt_cruzar, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(jb_ListarRegistros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jb_SalirDeRegistros)
                .addContainerGap())
        );

        javax.swing.GroupLayout jd_RegistrosLayout = new javax.swing.GroupLayout(jd_Registros.getContentPane());
        jd_Registros.getContentPane().setLayout(jd_RegistrosLayout);
        jd_RegistrosLayout.setHorizontalGroup(
            jd_RegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_RegistrosLayout.setVerticalGroup(
            jd_RegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jd_indices.setUndecorated(true);

        jPanel9.setBackground(new java.awt.Color(0, 204, 204));
        jPanel9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel5.setText("Índices");

        jb_CrearIndice.setBackground(new java.awt.Color(204, 255, 255));
        jb_CrearIndice.setText("Crear Índices");

        jb_ReIndexarArchivos.setBackground(new java.awt.Color(204, 255, 255));
        jb_ReIndexarArchivos.setText("Re Indexar Archivos");

        jButton2.setBackground(new java.awt.Color(204, 255, 255));
        jButton2.setText("Regresar");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jb_CrearIndice, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                .addComponent(jb_ReIndexarArchivos)
                .addGap(39, 39, 39))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_ReIndexarArchivos, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_CrearIndice, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout jd_indicesLayout = new javax.swing.GroupLayout(jd_indices.getContentPane());
        jd_indices.getContentPane().setLayout(jd_indicesLayout);
        jd_indicesLayout.setHorizontalGroup(
            jd_indicesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_indicesLayout.setVerticalGroup(
            jd_indicesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jd_Estandarizacion.setUndecorated(true);

        jPanel10.setBackground(new java.awt.Color(0, 204, 204));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel6.setText("Estandarización");

        jb_ExportarExcel.setBackground(new java.awt.Color(204, 255, 255));
        jb_ExportarExcel.setText("Exportar Excel");
        jb_ExportarExcel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_ExportarExcelMouseClicked(evt);
            }
        });

        jb_ExportarlXMLconSch.setBackground(new java.awt.Color(204, 255, 255));
        jb_ExportarlXMLconSch.setText("Exportar XML con Schema");
        jb_ExportarlXMLconSch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_ExportarlXMLconSchMouseClicked(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(204, 255, 255));
        jButton3.setText("Regresar");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jb_ExportarExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                .addComponent(jb_ExportarlXMLconSch)
                .addGap(44, 44, 44))
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_ExportarlXMLconSch, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_ExportarExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout jd_EstandarizacionLayout = new javax.swing.GroupLayout(jd_Estandarizacion.getContentPane());
        jd_Estandarizacion.getContentPane().setLayout(jd_EstandarizacionLayout);
        jd_EstandarizacionLayout.setHorizontalGroup(
            jd_EstandarizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jd_EstandarizacionLayout.setVerticalGroup(
            jd_EstandarizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jd_CrearCampo.setBackground(new java.awt.Color(0, 0, 255));
        jd_CrearCampo.setUndecorated(true);

        jPanel14.setBackground(new java.awt.Color(0, 255, 153));
        jPanel14.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("CREACIÓN DE CAMPO");

        jl_nameCampo.setText("Nombre del campo:");

        label_llavePrim.setText("Es llave primaria?");

        bg_LlavePrimaria.add(rb_key_si);
        rb_key_si.setText("Si");

        bg_LlavePrimaria.add(rb_key_no);
        rb_key_no.setSelected(true);
        rb_key_no.setText("No");

        jl_longitud.setText("Longitud del campo:");

        label_llaveCandi.setText("Es llave candidata?");

        bg_LlaveCandidata.add(rb_cand_si);
        rb_cand_si.setText("Si");

        bg_LlaveCandidata.add(rb_cand_no);
        rb_cand_no.setSelected(true);
        rb_cand_no.setText("No");

        jl_tipodevariable.setText("Tipo de variable:");

        bg_TipoDeVariable.add(rb_tip_string);
        rb_tip_string.setSelected(true);
        rb_tip_string.setText("String");

        bg_TipoDeVariable.add(rb_tip_integer);
        rb_tip_integer.setText("Integer");

        jb_TerminarCreacionCampo.setBackground(new java.awt.Color(204, 255, 255));
        jb_TerminarCreacionCampo.setText("Crear Campo");
        jb_TerminarCreacionCampo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_TerminarCreacionCampoMouseClicked(evt);
            }
        });

        jb_RegresarDeCrearCampo.setBackground(new java.awt.Color(204, 255, 255));
        jb_RegresarDeCrearCampo.setText("Regresar");
        jb_RegresarDeCrearCampo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_RegresarDeCrearCampoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jb_RegresarDeCrearCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(jl_longitud)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sp_LongitudCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(jl_nameCampo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tf_NombredelCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(jl_tipodevariable, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rb_tip_string)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rb_tip_integer)))))
                .addGap(125, 125, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                            .addComponent(rb_cand_si)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(rb_cand_no)
                            .addGap(18, 18, 18))
                        .addComponent(jb_TerminarCreacionCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(label_llaveCandi, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_llavePrim)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(rb_key_si)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rb_key_no)))
                        .addGap(8, 8, 8)))
                .addGap(56, 56, 56))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(193, 193, 193))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel9)
                .addGap(52, 52, 52)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jl_nameCampo)
                    .addComponent(tf_NombredelCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_llavePrim))
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rb_key_no)
                            .addComponent(rb_key_si)))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jl_longitud)
                            .addComponent(sp_LongitudCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(label_llaveCandi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rb_cand_si)
                        .addComponent(rb_cand_no))
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jl_tipodevariable)
                        .addComponent(rb_tip_string)
                        .addComponent(rb_tip_integer)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jb_TerminarCreacionCampo, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(jb_RegresarDeCrearCampo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout jd_CrearCampoLayout = new javax.swing.GroupLayout(jd_CrearCampo.getContentPane());
        jd_CrearCampo.getContentPane().setLayout(jd_CrearCampoLayout);
        jd_CrearCampoLayout.setHorizontalGroup(
            jd_CrearCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_CrearCampoLayout.setVerticalGroup(
            jd_CrearCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jd_ModificarCampo.setUndecorated(true);

        jPanel11.setBackground(new java.awt.Color(0, 255, 153));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N
        jLabel8.setText("CAMPOS");

        jt_Campos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Longitud", "Tipo", "Es Llave Primaria[s/n]"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jt_Campos);

        jb_RegresarDeCampos.setBackground(new java.awt.Color(204, 255, 255));
        jb_RegresarDeCampos.setText("Regresar");
        jb_RegresarDeCampos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_RegresarDeCamposMouseClicked(evt);
            }
        });

        jb_CampoModificar.setBackground(new java.awt.Color(204, 255, 255));
        jb_CampoModificar.setText("Modificar");
        jb_CampoModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_CampoModificarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jb_CampoModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jb_RegresarDeCampos))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(305, 305, 305)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jb_RegresarDeCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_CampoModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jd_ModificarCampoLayout = new javax.swing.GroupLayout(jd_ModificarCampo.getContentPane());
        jd_ModificarCampo.getContentPane().setLayout(jd_ModificarCampoLayout);
        jd_ModificarCampoLayout.setHorizontalGroup(
            jd_ModificarCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_ModificarCampoLayout.setVerticalGroup(
            jd_ModificarCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jd_ListarCampos.setUndecorated(true);

        jPanel12.setBackground(new java.awt.Color(0, 255, 153));

        jt_ListaDeCampos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jt_ListaDeCampos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Longitud", "Tipo", "Es llave Primaria[s/n]"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jt_ListaDeCampos);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 19)); // NOI18N
        jLabel10.setText("Campos Creados");

        jb_RegresarDeListarC.setBackground(new java.awt.Color(204, 255, 255));
        jb_RegresarDeListarC.setText("Regresar");
        jb_RegresarDeListarC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_RegresarDeListarCMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jb_RegresarDeListarC)
                        .addGap(189, 189, 189)
                        .addComponent(jLabel10))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 599, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(jb_RegresarDeListarC, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jd_ListarCamposLayout = new javax.swing.GroupLayout(jd_ListarCampos.getContentPane());
        jd_ListarCampos.getContentPane().setLayout(jd_ListarCamposLayout);
        jd_ListarCamposLayout.setHorizontalGroup(
            jd_ListarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_ListarCamposLayout.setVerticalGroup(
            jd_ListarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jd_EliminarCampos.setUndecorated(true);

        jPanel13.setBackground(new java.awt.Color(0, 255, 153));
        jPanel13.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jt_EliminarCampos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jt_EliminarCampos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Longitud", "Tipo", "Es Llave Primaria[s/n]"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jt_EliminarCampos);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Seleccion que campo quiere eliminar");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 19)); // NOI18N
        jLabel11.setText("Campos Creados");

        jb_RegresaDeEliminarCampos.setBackground(new java.awt.Color(204, 255, 255));
        jb_RegresaDeEliminarCampos.setText("Regresar");
        jb_RegresaDeEliminarCampos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_RegresaDeEliminarCamposMouseClicked(evt);
            }
        });

        jb_EliminarCampoSelec.setBackground(new java.awt.Color(204, 255, 255));
        jb_EliminarCampoSelec.setText("Eliminar");
        jb_EliminarCampoSelec.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_EliminarCampoSelecMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(193, 193, 193)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jb_RegresaDeEliminarCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jb_EliminarCampoSelec, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addGap(34, 34, 34)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jb_EliminarCampoSelec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_RegresaDeEliminarCampos, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jd_EliminarCamposLayout = new javax.swing.GroupLayout(jd_EliminarCampos.getContentPane());
        jd_EliminarCampos.getContentPane().setLayout(jd_EliminarCamposLayout);
        jd_EliminarCamposLayout.setHorizontalGroup(
            jd_EliminarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_EliminarCamposLayout.setVerticalGroup(
            jd_EliminarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jd_DatosDelCampo.setUndecorated(true);

        jPanel15.setBackground(new java.awt.Color(0, 204, 153));
        jPanel15.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setText("Datos del Campo");

        jLabel17.setText("Tipo:");

        bg_InfoTipoDatos.add(rb_InfoIntegerCampo);
        rb_InfoIntegerCampo.setText("Integer");

        bg_InfoTipoDatos.add(rb_InfoStringCampo);
        rb_InfoStringCampo.setSelected(true);
        rb_InfoStringCampo.setText("String");

        jLabel15.setText("Nombre:");

        jLabel16.setText("Longitud:");

        jb_InfoAceptarCambiosDatos.setBackground(new java.awt.Color(204, 255, 255));
        jb_InfoAceptarCambiosDatos.setText("Aceptar Cambios");
        jb_InfoAceptarCambiosDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_InfoAceptarCambiosDatosMouseClicked(evt);
            }
        });

        jb_RegresarDeDatosCampo.setBackground(new java.awt.Color(204, 255, 255));
        jb_RegresarDeDatosCampo.setText("Regresar");
        jb_RegresarDeDatosCampo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_RegresarDeDatosCampoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addComponent(jLabel13)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(js_InfoLongitudCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jb_InfoAceptarCambiosDatos)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tf_InfoNombreCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addGap(119, 119, 119)
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rb_InfoStringCampo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rb_InfoIntegerCampo))
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jb_RegresarDeDatosCampo)
                                .addGap(78, 78, 78)))))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel15)
                    .addComponent(tf_InfoNombreCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rb_InfoStringCampo)
                    .addComponent(rb_InfoIntegerCampo))
                .addGap(29, 29, 29)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(js_InfoLongitudCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_RegresarDeDatosCampo)
                    .addComponent(jb_InfoAceptarCambiosDatos))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout jd_DatosDelCampoLayout = new javax.swing.GroupLayout(jd_DatosDelCampo.getContentPane());
        jd_DatosDelCampo.getContentPane().setLayout(jd_DatosDelCampoLayout);
        jd_DatosDelCampoLayout.setHorizontalGroup(
            jd_DatosDelCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_DatosDelCampoLayout.setVerticalGroup(
            jd_DatosDelCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jd_nombre.setUndecorated(true);

        jPanel16.setBackground(new java.awt.Color(0, 204, 153));
        jPanel16.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton1.setBackground(new java.awt.Color(204, 255, 255));
        jButton1.setText("Crear");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jLabel14.setText("Nombre del Archivo");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_nombreArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(110, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(196, 196, 196))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_nombreArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout jd_nombreLayout = new javax.swing.GroupLayout(jd_nombre.getContentPane());
        jd_nombre.getContentPane().setLayout(jd_nombreLayout);
        jd_nombreLayout.setHorizontalGroup(
            jd_nombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jd_nombreLayout.setVerticalGroup(
            jd_nombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jd_IntroducirString.setUndecorated(true);

        jPanel17.setBackground(new java.awt.Color(0, 204, 153));
        jPanel17.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jl_string.setText("jLabel7");

        jButton4.setBackground(new java.awt.Color(204, 255, 255));
        jButton4.setText("Siguiente");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addComponent(jl_string, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jt_String, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jp_progreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addComponent(jButton4)))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jt_String, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jl_string))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jp_progreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jButton4)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout jd_IntroducirStringLayout = new javax.swing.GroupLayout(jd_IntroducirString.getContentPane());
        jd_IntroducirString.getContentPane().setLayout(jd_IntroducirStringLayout);
        jd_IntroducirStringLayout.setHorizontalGroup(
            jd_IntroducirStringLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_IntroducirStringLayout.setVerticalGroup(
            jd_IntroducirStringLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jd_MBL.setUndecorated(true);

        jPanel2.setBackground(new java.awt.Color(0, 255, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jt_Registros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jt_Registros.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jt_RegistrosPropertyChange(evt);
            }
        });
        jScrollPane4.setViewportView(jt_Registros);

        jb_RegresardeTablaRegistro.setText("Regresar");
        jb_RegresardeTablaRegistro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_RegresardeTablaRegistroMouseClicked(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel18.setText("Registros en el archivo");

        jb_eliminarRegistro.setText("Eliminar");
        jb_eliminarRegistro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_eliminarRegistroMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel18)
                .addGap(240, 240, 240))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jb_RegresardeTablaRegistro)
                        .addGap(476, 476, 476)
                        .addComponent(jb_eliminarRegistro))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel18)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_RegresardeTablaRegistro)
                    .addComponent(jb_eliminarRegistro))
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout jd_MBLLayout = new javax.swing.GroupLayout(jd_MBL.getContentPane());
        jd_MBL.getContentPane().setLayout(jd_MBLLayout);
        jd_MBLLayout.setHorizontalGroup(
            jd_MBLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_MBLLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jd_MBLLayout.setVerticalGroup(
            jd_MBLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jd_BuscarRegistros.setUndecorated(true);

        jPanel3.setBackground(new java.awt.Color(0, 255, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 396, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 296, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jd_BuscarRegistrosLayout = new javax.swing.GroupLayout(jd_BuscarRegistros.getContentPane());
        jd_BuscarRegistros.getContentPane().setLayout(jd_BuscarRegistrosLayout);
        jd_BuscarRegistrosLayout.setHorizontalGroup(
            jd_BuscarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_BuscarRegistrosLayout.setVerticalGroup(
            jd_BuscarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel18.setBackground(new java.awt.Color(0, 204, 153));
        jPanel18.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        try {
            jf_Integer.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jl_Integer.setText("jLabel7");

        jButton5.setBackground(new java.awt.Color(204, 255, 255));
        jButton5.setText("Siguiente");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addGap(187, 187, 187))
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jp_Integer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jl_Integer, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jf_Integer, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(150, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jl_Integer)
                    .addComponent(jf_Integer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jp_Integer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jButton5))
        );

        javax.swing.GroupLayout jd_IntroducirIntegerLayout = new javax.swing.GroupLayout(jd_IntroducirInteger.getContentPane());
        jd_IntroducirInteger.getContentPane().setLayout(jd_IntroducirIntegerLayout);
        jd_IntroducirIntegerLayout.setHorizontalGroup(
            jd_IntroducirIntegerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jd_IntroducirIntegerLayout.setVerticalGroup(
            jd_IntroducirIntegerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jd_IntroducirRegistros.setUndecorated(true);

        jPanel19.setBackground(new java.awt.Color(0, 255, 153));
        jPanel19.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 396, Short.MAX_VALUE)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 296, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jd_IntroducirRegistrosLayout = new javax.swing.GroupLayout(jd_IntroducirRegistros.getContentPane());
        jd_IntroducirRegistros.getContentPane().setLayout(jd_IntroducirRegistrosLayout);
        jd_IntroducirRegistrosLayout.setHorizontalGroup(
            jd_IntroducirRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_IntroducirRegistrosLayout.setVerticalGroup(
            jd_IntroducirRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel20.setBackground(new java.awt.Color(0, 204, 153));
        jPanel20.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel7.setText("Ingrese el Nombre del archvio XML:");

        jb_CrearArchivoXML.setBackground(new java.awt.Color(204, 255, 255));
        jb_CrearArchivoXML.setText("Aceptar y crear archvio XML");
        jb_CrearArchivoXML.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_CrearArchivoXMLMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jt_NombreXML)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addContainerGap(113, Short.MAX_VALUE)
                .addComponent(jb_CrearArchivoXML)
                .addGap(109, 109, 109))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jt_NombreXML, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jb_CrearArchivoXML, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout jd_NameParaXMLLayout = new javax.swing.GroupLayout(jd_NameParaXML.getContentPane());
        jd_NameParaXML.getContentPane().setLayout(jd_NameParaXMLLayout);
        jd_NameParaXMLLayout.setHorizontalGroup(
            jd_NameParaXMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_NameParaXMLLayout.setVerticalGroup(
            jd_NameParaXMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Standard File Manager");
        setBackground(new java.awt.Color(0, 0, 255));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setForeground(java.awt.Color.blue);
        setName("Standard File Manager"); // NOI18N

        jPanel1.setBackground(new java.awt.Color(51, 51, 255));
        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel1.setForeground(new java.awt.Color(51, 51, 255));

        jb_Salir1.setBackground(new java.awt.Color(204, 255, 255));
        jb_Salir1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jb_Salir1.setText("Salir");
        jb_Salir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_Salir1ActionPerformed(evt);
            }
        });

        jb_Indices.setBackground(new java.awt.Color(204, 255, 255));
        jb_Indices.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jb_Indices.setText("Índices");
        jb_Indices.setEnabled(false);
        jb_Indices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_IndicesActionPerformed(evt);
            }
        });

        jb_Campos.setBackground(new java.awt.Color(204, 255, 255));
        jb_Campos.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jb_Campos.setText("Campos");
        jb_Campos.setEnabled(false);
        jb_Campos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_CamposActionPerformed(evt);
            }
        });

        jb_Archivo.setBackground(new java.awt.Color(204, 255, 255));
        jb_Archivo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jb_Archivo.setText("Archivo");
        jb_Archivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_ArchivoActionPerformed(evt);
            }
        });

        jb_Registros.setBackground(new java.awt.Color(204, 255, 255));
        jb_Registros.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jb_Registros.setText("Registros");
        jb_Registros.setEnabled(false);
        jb_Registros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_RegistrosMouseClicked(evt);
            }
        });

        jb_Estandarizacion.setBackground(new java.awt.Color(204, 255, 255));
        jb_Estandarizacion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jb_Estandarizacion.setText("Estandarización");
        jb_Estandarizacion.setEnabled(false);
        jb_Estandarizacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_EstandarizacionActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setText("Standard File Manager");
        jLabel1.setName("Standard File Manager"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jb_Estandarizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jb_Registros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jb_Archivo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jb_Indices, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_Salir1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_Campos, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                .addGap(43, 43, 43))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_Campos, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_Archivo, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_Indices, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_Registros, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_Salir1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_Estandarizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jb_Salir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_Salir1ActionPerformed
       System.exit(0);
    }//GEN-LAST:event_jb_Salir1ActionPerformed

    private void jb_ArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_ArchivoActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        jd_Archivo.pack();
        jd_Archivo.setModal(true);
        jd_Archivo.setLocationRelativeTo(this);
        jd_Archivo.setVisible(true);
    }//GEN-LAST:event_jb_ArchivoActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        jd_Archivo.dispose();
        this.setVisible(true);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jb_CamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_CamposActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        jd_Campos.pack();
        jd_Campos.setModal(true);
        jd_Campos.setLocationRelativeTo(this);
        jd_Campos.setVisible(true);
    }//GEN-LAST:event_jb_CamposActionPerformed

    private void jb_IndicesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_IndicesActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        jd_indices.pack();
        jd_indices.setModal(true);
        jd_indices.setLocationRelativeTo(this);
        jd_indices.setVisible(true);
    }//GEN-LAST:event_jb_IndicesActionPerformed

    private void jb_EstandarizacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_EstandarizacionActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        jd_Estandarizacion.pack();
        jd_Estandarizacion.setModal(true);
        jd_Estandarizacion.setLocationRelativeTo(this);
        jd_Estandarizacion.setVisible(true);
    }//GEN-LAST:event_jb_EstandarizacionActionPerformed

    private void jb_CrearCampoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_CrearCampoMouseClicked
        ExisteLlavePrim = false;
        if(!campos.isEmpty()){
            for (int i = 0; i < campos.size(); i++) {
                if(campos.get(i).isLlave_primaria()){
                    ExisteLlavePrim = true;
                    break;
                }
            }
        }
        
        if(ExisteLlavePrim){
            label_llavePrim.setVisible(false);
            rb_key_si.setVisible(false);
            rb_key_no.setVisible(false);
            
            label_llaveCandi.setVisible(true);
            rb_cand_si.setVisible(true);
            rb_cand_no.setVisible(true);
            
        }else{
            label_llaveCandi.setVisible(false);
            rb_cand_si.setVisible(false);
            rb_cand_no.setVisible(false);
            
            label_llavePrim.setVisible(true);
            rb_key_si.setVisible(true);
            rb_key_no.setVisible(true);
        }
        
        
        jd_CrearCampo.pack();
        jd_CrearCampo.setModal(true);
        jd_CrearCampo.setLocationRelativeTo(this);
        jd_CrearCampo.setVisible(true);
    }//GEN-LAST:event_jb_CrearCampoMouseClicked

    private void jb_SalirdeCamposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_SalirdeCamposMouseClicked
        jd_Campos.dispose();
        this.setVisible(true);
    }//GEN-LAST:event_jb_SalirdeCamposMouseClicked

    private void jb_SalirDeRegistrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_SalirDeRegistrosMouseClicked
        jd_Registros.dispose();
        this.setVisible(true);
    }//GEN-LAST:event_jb_SalirDeRegistrosMouseClicked

    private void jb_TerminarCreacionCampoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_TerminarCreacionCampoMouseClicked
       String nombre = tf_NombredelCampo.getText();
       int longitud;
       //newLongitud = (int) js_InfoLongitudCampo.getValue();
       
       
       
       
       
       
       longitud = (int) sp_LongitudCampo.getValue();
       
       
        if (ExisteLlavePrim) {
            if(rb_tip_integer.isSelected() && rb_cand_si.isSelected())
                campos.add(new Campo(nombre, "int", false, longitud,true));
            else
                campos.add(new Campo(nombre, "String", false, longitud,false));
        }else{
            if(rb_tip_integer.isSelected() && rb_key_si.isSelected())
                campos.add(new Campo(nombre, "int", true, longitud,false));
            else
                campos.add(new Campo(nombre, "String", false, longitud,false));
        }
       
       
       
       
       tf_NombredelCampo.setText("");
       sp_LongitudCampo.setValue(0);
       rb_key_no.setSelected(true);
       rb_tip_string.setSelected(true);
    }//GEN-LAST:event_jb_TerminarCreacionCampoMouseClicked


    private void jb_ModificarCamposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_ModificarCamposMouseClicked
        DefaultTableModel model = (DefaultTableModel)jt_Campos.getModel();
        
        String llave_o_no;
        
        for (int i = 0; i < campos.size(); i++) {
            if(campos.get(i).isLlave_primaria())
                llave_o_no = "S";
            else
                llave_o_no = "N";
            Object[] newRow = {campos.get(i).getNombre(), campos.get(i).getLongitud(),campos.get(i).getTipo(),llave_o_no
            
            };
            model.addRow(newRow);
        }
        
        jt_Campos.setModel(model);
        
        
        jd_Campos.setVisible(false);
        jd_ModificarCampo.pack();
        jd_ModificarCampo.setModal(true);
        jd_ModificarCampo.setLocationRelativeTo(jd_Campos);
        jd_ModificarCampo.setVisible(true);
        
        
        
        
    }//GEN-LAST:event_jb_ModificarCamposMouseClicked

    private void jb_RegresarDeCamposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_RegresarDeCamposMouseClicked
        jt_Campos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Longitud", "Tipo", "Es Llave Primaria[s/n]"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jd_ModificarCampo.dispose();
        jd_Campos.setVisible(true);
    }//GEN-LAST:event_jb_RegresarDeCamposMouseClicked

    private void jb_CampoModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_CampoModificarMouseClicked
        DefaultTableModel model = (DefaultTableModel) jt_Campos.getModel();
        int index;
        if(jt_Campos.getSelectedRow() >= 0){
            index = jt_Campos.getSelectedRow();
            tf_InfoNombreCampo.setText(campos.get(index).getNombre());
            js_InfoLongitudCampo.setValue(campos.get(index).getLongitud());
            
            
            String tipo = campos.get(index).getTipo();
            tipo = tipo.toUpperCase();
            
            if(tipo.equals("STRING"))
                rb_InfoStringCampo.setSelected(true);
            else
                rb_InfoIntegerCampo.setSelected(true);
            jd_ModificarCampo.setVisible(false);
            jd_DatosDelCampo.pack();
            jd_DatosDelCampo.setModal(true);
            jd_DatosDelCampo.setLocationRelativeTo(jd_ModificarCampo);
            jd_DatosDelCampo.setVisible(true);
            
            
            
            
        }else{
            JOptionPane.showMessageDialog(jd_ModificarCampo, "No ha Seleccionado Un Elemento");
        }
    }//GEN-LAST:event_jb_CampoModificarMouseClicked

    private void jb_RegresarDeCrearCampoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_RegresarDeCrearCampoMouseClicked
        tf_NombredelCampo.setText("");
        sp_LongitudCampo.setValue(0);
        jd_CrearCampo.dispose();
        jd_Campos.setVisible(true);
    }//GEN-LAST:event_jb_RegresarDeCrearCampoMouseClicked

    private void jb_ListarCamposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_ListarCamposMouseClicked
        DefaultTableModel model = (DefaultTableModel)jt_ListaDeCampos.getModel();
        String llave_o_no;
        for (int i = 0; i < campos.size(); i++) {
            if(campos.get(i).isLlave_primaria())
                llave_o_no = "S";
            else
                llave_o_no = "N";

            Object[] newRow = {campos.get(i).getNombre(), campos.get(i).getLongitud(),campos.get(i).getTipo(),llave_o_no
            
            };
            model.addRow(newRow);
        }
        
        jt_ListaDeCampos.setModel(model);
        
        jd_Campos.setVisible(false);
        jd_ListarCampos.pack();
        jd_ListarCampos.setModal(true);
        jd_ListarCampos.setLocationRelativeTo(this);
        jd_ListarCampos.setVisible(true);
    }//GEN-LAST:event_jb_ListarCamposMouseClicked

    private void jb_RegresarDeListarCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_RegresarDeListarCMouseClicked
        jt_ListaDeCampos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Longitud", "Tipo", "Es Llave Primaria[s/n]"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jd_ListarCampos.dispose();
        jd_Campos.setVisible(true);
    }//GEN-LAST:event_jb_RegresarDeListarCMouseClicked

    private void jb_BorrarCamposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_BorrarCamposMouseClicked
        DefaultTableModel model = (DefaultTableModel)jt_EliminarCampos.getModel();
        
        for (int i = 0; i < campos.size(); i++) {
            String type = campos.get(i).getTipo();
            Object[] newRow = {campos.get(i).getNombre(), campos.get(i).getLongitud(),campos.get(i).getTipo(),type
            
            };
            model.addRow(newRow);
        }
        
        jt_EliminarCampos.setModel(model);
        
        jd_Campos.setVisible(false);
        jd_EliminarCampos.pack();
        jd_EliminarCampos.setModal(true);
        jd_EliminarCampos.setLocationRelativeTo(this);
        jd_EliminarCampos.setVisible(true);
    }//GEN-LAST:event_jb_BorrarCamposMouseClicked

    private void jb_EliminarCampoSelecMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_EliminarCampoSelecMouseClicked
        int selected = jt_EliminarCampos.getSelectedRow();
        campos.remove(selected);
        
        DefaultTableModel model = (DefaultTableModel)jt_EliminarCampos.getModel();
        jt_EliminarCampos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Longitud", "Tipo", "Es Llave Primaria[s/n]"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        for (int i = 0; i < campos.size(); i++) {
            String type = campos.get(i).getTipo();
            Object[] newRow = {campos.get(i).getNombre(), campos.get(i).getLongitud(),campos.get(i).getTipo(),type
            
            };
            model.addRow(newRow);
        }
        
        jt_EliminarCampos.setModel(model);
    }//GEN-LAST:event_jb_EliminarCampoSelecMouseClicked

    private void jb_RegresaDeEliminarCamposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_RegresaDeEliminarCamposMouseClicked
        jt_EliminarCampos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Longitud", "Tipo", "Es Llave Primaria[s/n]"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        
        jd_EliminarCampos.dispose();
        jd_Campos.setVisible(true);
    }//GEN-LAST:event_jb_RegresaDeEliminarCamposMouseClicked
                                     
    private void bt_NuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_NuevoMouseClicked
        // TODO add your handling code here:
        jd_nombre.pack();
        jd_nombre.setModal(true);
        jd_nombre.setLocationRelativeTo(this);
        jd_nombre.setVisible(true);
    }//GEN-LAST:event_bt_NuevoMouseClicked

    private void bt_SalvarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_SalvarMouseClicked
        // TODO add your handling code here:
        currentFile.setCampos(campos);
        
        JOptionPane.showMessageDialog(this, "El archivo se guardo exitosamente!");
    }//GEN-LAST:event_bt_SalvarMouseClicked

    private void bt_CerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_CerrarMouseClicked
        // TODO add your handling code here:
        currentFile = null;
        campos.clear();
        bt_Cerrar.setEnabled(false);
        bt_Salvar.setEnabled(false);
        bt_Nuevo.setEnabled(true);
        bt_Cargar.setEnabled(true);
    }//GEN-LAST:event_bt_CerrarMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        
        if(tf_nombreArchivo.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this, "Por favor ingrese un nombre para el archivo");
        }
        else
        {
            String nombre = tf_nombreArchivo.getText();
            try {
                currentFile = new Metadata("./" + nombre + ".aajs");
            } catch (IOException ex) {
                
            }
            bt_Cerrar.setEnabled(true);
            bt_Salvar.setEnabled(true);
            bt_Nuevo.setEnabled(false);
            bt_Cargar.setEnabled(false);
            jb_Campos.setEnabled(true);
            jb_Registros.setEnabled(true);
            jb_Indices.setEnabled(true);
            jb_Estandarizacion.setEnabled(true);
                JOptionPane.showMessageDialog(this, "El Archivo se creo exitosamente");
            jd_nombre.dispose();
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void bt_CargarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_CargarMouseClicked
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        fc.setCurrentDirectory(new File("./"));
        int seleccion = fc.showOpenDialog(this);
        
        if(seleccion == JFileChooser.APPROVE_OPTION)
        {
            currentFile = new Metadata();
            BuildTable(1);
            try {
                CargarMetadatos();
                BuildTable(0);
                LeerDatosRegistro();
            } catch (ClassNotFoundException ex) {
                // Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            campos = currentFile.getCampos();
            bt_Cerrar.setEnabled(true);
            bt_Salvar.setEnabled(true);
            bt_Nuevo.setEnabled(false);
            bt_Cargar.setEnabled(false);
            jb_Campos.setEnabled(true);
            jb_Registros.setEnabled(true);
            jb_Indices.setEnabled(true);
            jb_Estandarizacion.setEnabled(true);
        }
        
    }//GEN-LAST:event_bt_CargarMouseClicked

    private void jb_RegresarDeDatosCampoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_RegresarDeDatosCampoMouseClicked
        jd_DatosDelCampo.dispose();
        jd_ModificarCampo.setVisible(true);
    }//GEN-LAST:event_jb_RegresarDeDatosCampoMouseClicked

    private void jb_InfoAceptarCambiosDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_InfoAceptarCambiosDatosMouseClicked
        int indice = jt_Campos.getSelectedRow();
        int cont = 0;
        
        String newNombre, newTipo;
        int newLongitud;
        
        newNombre = tf_InfoNombreCampo.getText();
        newLongitud = (int) js_InfoLongitudCampo.getValue();
        
        if(rb_InfoStringCampo.isSelected())
            newTipo = "String";
        else
            newTipo = "int";
        
        
        if(!newNombre.equals(campos.get(indice).getNombre())){
            campos.get(indice).setNombre(newNombre);
            jt_Campos.setValueAt(newNombre, indice, 0);
            cont++;
        }
            
        if(!newTipo.equals(campos.get(indice).getTipo())){
            campos.get(indice).setTipo(newTipo);
            jt_Campos.setValueAt(newTipo, indice, 2);
            cont++;
            
        }
        
        if(newLongitud != campos.get(indice).getLongitud()){
            campos.get(indice).setLongitud(newLongitud);
            jt_Campos.setValueAt(newLongitud, indice, 1);
            cont++;
        }
        
        
        if(cont > 0)
            JOptionPane.showMessageDialog(jd_DatosDelCampo, "Datos Modificados Correctamente");
        else
            JOptionPane.showMessageDialog(jd_DatosDelCampo, "No se ha Modificado Ningún Dato");
            
        jd_DatosDelCampo.dispose();
        jd_ModificarCampo.setVisible(true);
    }//GEN-LAST:event_jb_InfoAceptarCambiosDatosMouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        jd_indices.dispose();
        this.setVisible(true);
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        jd_Estandarizacion.dispose();
        this.setVisible(true);
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
        jd_IntroducirString.dispose();
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // TODO add your handling code here:
        jd_IntroducirInteger.dispose();
    }//GEN-LAST:event_jButton5MouseClicked

    private void jb_IntroducirRegistrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_IntroducirRegistrosMouseClicked
        
      /*  if (currentFile != null) {
            if (currentFile.getCampos().size() > 0) {
                CrearRegistro();
            }
        }else{
            JOptionPane.showInputDialog("No hay Campos creados");
        }*/
        //System.out.println("NUM REGISTROS: " + currentFile.getNumregistros());
            if (currentFile.getCampos() != null) {
                if (currentFile.getCampos().size() > 0) {
                    
                        if (currentFile.getNumregistros() < 1) {
                            try {
                                file.delete();
                                file.createNewFile();
                                System.out.println("Forcing deletion and recreation of the file.");
                            } catch (Exception sdj) {
                                System.out.println("Error en borrar.");
                            }

                            //try {
                                //EscribirMetadatos();
                            //} catch (IOException ex) {
                                //ex.printStackTrace();
                            //}
                            currentFile.addnumregistros();
                            CrearRegistro();
                            try {
                                EscribirMetadatos();
                            } catch (IOException ex) {
                                Logger.getLogger(Ventana_Principal.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        } else {
                            currentFile.addnumregistros();
                            CrearRegistro();
                        }

                    

                } else {
                    JOptionPane.showMessageDialog(null, "No hay campos creados! XTT 428");
                }
            } else {
                JOptionPane.showMessageDialog(null, "No hay campos creados! XTT 431");
            }
            
        
        
    }//GEN-LAST:event_jb_IntroducirRegistrosMouseClicked

    private void jb_ModificarRegistrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_ModificarRegistrosMouseClicked
        jd_Registros.setVisible(false);
        
        jb_eliminarRegistro.setVisible(false);
        jd_MBL.pack();
        jd_MBL.setModal(true);
        jd_MBL.setLocationRelativeTo(this);
        jd_MBL.setVisible(true);
    }//GEN-LAST:event_jb_ModificarRegistrosMouseClicked

    private void jb_BuscarRegistrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_BuscarRegistrosMouseClicked
        jd_BuscarRegistros.pack();
        jd_BuscarRegistros.setModal(true);
        jd_BuscarRegistros.setLocationRelativeTo(this);
        jd_BuscarRegistros.setVisible(true);
    }//GEN-LAST:event_jb_BuscarRegistrosMouseClicked

    private void jb_BorrarRegistrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_BorrarRegistrosMouseClicked
        jd_Registros.setVisible(false);
        
        jb_eliminarRegistro.setVisible(true);
        jd_MBL.pack();
        jd_MBL.setModal(true);
        jd_MBL.setLocationRelativeTo(this);
        jd_MBL.setVisible(true);
    }//GEN-LAST:event_jb_BorrarRegistrosMouseClicked

    private void jb_ListarRegistrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_ListarRegistrosMouseClicked
        BuildTable(0);
        
        try {
            InsertarRegistroTabla();
        } catch (IOException ex) {
            Logger.getLogger(Ventana_Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Ventana_Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        jd_Registros.setVisible(false);
        
        jb_eliminarRegistro.setVisible(false);
        jd_MBL.pack();
        jd_MBL.setModal(true);
        jd_MBL.setLocationRelativeTo(this);
        jd_MBL.setVisible(true);
        
    }//GEN-LAST:event_jb_ListarRegistrosMouseClicked

    private void jb_ExportarlXMLconSchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_ExportarlXMLconSchMouseClicked
        jd_NameParaXML.pack();
        jd_NameParaXML.setModal(true);
        jd_NameParaXML.setLocationRelativeTo(this);
        jd_NameParaXML.setVisible(true);
    }//GEN-LAST:event_jb_ExportarlXMLconSchMouseClicked

    private void jb_CrearArchivoXMLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_CrearArchivoXMLMouseClicked
        try {
            if(jt_NombreXML.getText() != null){
                String name = jt_NombreXML.getText();
                
                if (currentFile == null || currentFile.getCampos().isEmpty() || currentFile.getNumregistros() == 0) {
                    JOptionPane.showMessageDialog(null, "No hay informacion cargada");
                } else {
                    ArrayList registrost = new ArrayList();//van los registros
                    /* FALTA AGREGAR LA TABLA CON LA QUE TRABAJAREMOS
                    for (int i = 0; i < Table.getRowCount(); i++) {
                        ArrayList row = new ArrayList();
                        for (int j = 0; j < Table.getColumnCount(); j++) {
                            row.add(Table.getValueAt(i, j));
                        }
                        registrost.add(row);
                    }
                    */
                    exportXML(currentFile.getCampos(), registrost, name);
                    System.out.println("SE EXPORTO CON EXITO");//tirarlo con un joptionpane?
                    jt_NombreXML.setText("");
                    
                    jd_NameParaXML.dispose();
                    
                }
            }else{
                System.out.println("No ingreso nombre para exportar el archivo XML intente de nuevo");
            } 
           

        } catch (Exception e) {
            System.out.println("Could not export successfully");
        }
    }//GEN-LAST:event_jb_CrearArchivoXMLMouseClicked

    private void jb_ExportarExcelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_ExportarExcelMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)jt_Registros.getModel();
        Tabla.setModel(model);
        try {
            if (currentFile == null || currentFile.getCampos() == null || currentFile.getNumregistros() == 0) {
                JOptionPane.showMessageDialog(null, "No hay informacion cargada");
            } else {
                String name = JOptionPane.showInputDialog(null, "Ingrese el nombre del exporte: ");
                //mandar tabla de registros
                excel.ExportToExcel(currentFile, name, Tabla);
            }

        } catch (Exception e) {
            System.out.println("Error Fatal.");
        }
        
    }//GEN-LAST:event_jb_ExportarExcelMouseClicked

    private void jb_RegresardeTablaRegistroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_RegresardeTablaRegistroMouseClicked
        jd_MBL.dispose();
        jd_Registros.setVisible(true);
    }//GEN-LAST:event_jb_RegresardeTablaRegistroMouseClicked

    private void jb_eliminarRegistroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_eliminarRegistroMouseClicked
        if (jt_Registros.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(jd_MBL, "Seleccione un Registro de la Tabla para Borrar");
        } else {
            try {
                //System.out.println("Se eliminara el registro: " + rowRemoval);
                ArrayList datos_elim = new ArrayList();
                for (int i = 0; i < currentFile.getCampos().size(); i++) {
                    datos_elim.add(jt_Registros.getValueAt(jt_Registros.getSelectedRow(), i));
                }
                //mode = -1;
                //Exportar a Trima Aqui.
                EliminarDatoArchivo(datos_elim);
                System.out.println(currentFile.getNumregistros());
                currentFile.subtractnumregistros();
                System.out.println("Metadata Registry after deleting: " + currentFile.getNumregistros());
                DefaultTableModel modelo =(DefaultTableModel) jt_Registros.getModel();
                //DefaultTableModel model = (DefaultTableModel) modelo;
                modelo.removeRow(jt_Registros.getSelectedRow());
                jt_Registros.setModel(modelo);
            } catch (Exception e) {
                System.out.println("Problema borrando el registro");
            }

        }
    }//GEN-LAST:event_jb_eliminarRegistroMouseClicked

    private void bt_cruzarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_cruzarMouseClicked
        // TODO add your handling code here:
        
        
        // TODO add your handling code here:
        if (currentFile == null) {
            JOptionPane.showMessageDialog(null, "No hay ningun file cargado");
        } else {
            if (currentFile.getCampos() == null) {
                JOptionPane.showMessageDialog(null, "No hay informacion definida.");
            } else {
                JTable tablavieja = (JTable) Tabla;
                Metadata vieja = (Metadata) currentFile;

                AvailList = new AVL();
                raFile= null;
                //Metadata temporal = new Metadata();
                //temporal = currentFile;
                LoadFile();
                if (FileSuccess == 1) {

                        Metadata currentFile = new Metadata();
                    BuildTable(1);
                    try {
                        CargarMetadatos();
                        BuildTable(0);
                        LeerDatosRegistro();
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(Ventana_Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    // Comparar ahora los campos de ambas currentFiles.
                    if (currentFile.getCampos().size() == vieja.getCampos().size()) {
                        boolean compatible = true;
                        int camposmax = currentFile.getCampos().size();
                        for (int i = 0; i < camposmax; i++) {
                            int value1 = Integer.parseInt(currentFile.getTipos().get(i).toString());
                            int value2 = Integer.parseInt(vieja.getTipos().get(i).toString());
                            if (value1 == value2) {

                            } else {
                                System.out.println("Valor Incompatible i:" + value1 + "Valor Incompatible2:" + value2);
                                compatible = false;
                            }

                        }
                        if (compatible) {
                            System.out.println(currentFile);
                            System.out.println(vieja);
                            TableModel modelviejo = tablavieja.getModel();
                            DefaultTableModel modeloviejo = (DefaultTableModel) modelviejo;
                            TableModel model = Tabla.getModel();
                            DefaultTableModel modelo = (DefaultTableModel) model;
                            for (int i = 0; i < tablavieja.getRowCount(); i++) {
                                int numactualr = Integer.parseInt(modeloviejo.getValueAt(i, 0).toString());
                                int superes = Integer.parseInt(Tabla.getValueAt(i, 0).toString());
                                System.out.println("nUM ACTUAk" + numactualr + "Ps" + superes);
                                Registro trabajando = new Registro(numactualr);
                                if (currentFile.getArbolB().search(trabajando) == null) {
                                    if (numactualr > 9999 && numactualr < 100000) {
                                        currentFile.getArbolB().insert(trabajando);
                                        ArrayList superrow = new ArrayList();
                                        for (int j = 0; j < vieja.getCampos().size(); j++) {
                                            superrow.add(tablavieja.getValueAt(i, j));
                                        }

                                        modelo.addRow(superrow.toArray());
                                        System.out.println(trabajando);
                                        currentFile.addnumregistros();
                                        try {
                                            EscribirDatosRegistro(superrow);
                                            BuscarDatoArchivo(trabajando);
                                        } catch (Exception ex) {
                                            //Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                                            System.out.println(ex);
                                            ex.printStackTrace();
                                        }
                                        Tabla.setModel(modelo);
                                        System.out.println(currentFile.getArbolB().search(trabajando));
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Dato Incompatible pertenece a primary key " + numactualr);

                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "Dato Ya existe!");
                                    // System.out.println(metadata.getArbolB().search(trabajando));
                                }
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Metadatas no compatibles por tipo");

                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Metadatas no compatibles por tamaño de campos");
                        JOptionPane.showMessageDialog(null, "Se cargara el segundo archivo seleccionado.");
                    }
                }
            }
        }
         
   
    }//GEN-LAST:event_bt_cruzarMouseClicked

    private void jb_RegistrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_RegistrosMouseClicked
        if(jb_Registros.isEnabled())
        {
            this.setVisible(false);
            jd_Registros.pack();
            jd_Registros.setModal(true);
            jd_Registros.setLocationRelativeTo(this);
            jd_Registros.setVisible(true);

            if(currentFile.getNumregistros() <= 0){
                jb_BuscarRegistros.setEnabled(false);
                jb_ListarRegistros.setEnabled(false);
                jb_ModificarRegistros.setEnabled(false);
                jb_BorrarRegistros.setEnabled(false);
            }else{
                jb_BuscarRegistros.setEnabled(true);
                jb_ListarRegistros.setEnabled(true);
                jb_ModificarRegistros.setEnabled(true);
                jb_BorrarRegistros.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jb_RegistrosMouseClicked

    private void jt_RegistrosPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jt_RegistrosPropertyChange
        try {
            if (jt_Registros.isEditing() && tablemodification == 0) {
                mode = -1;
                tablemodification = 1;
                System.out.println("Cell value being edited.");

                CellEditor x = jt_Registros.getCellEditor();
                oldcellvalue = jt_Registros.getValueAt(jt_Registros.getSelectedRow(), jt_Registros.getSelectedColumn());
                currentRow = jt_Registros.getSelectedRow();
                currentColumn = jt_Registros.getSelectedColumn();
                System.out.println("Valor Original:" + oldcellvalue);
                x.addCellEditorListener(new CellEditorListener() {
                    @Override
                    public void editingStopped(ChangeEvent e) { //When editing stops compare original value and type to the new value and type.
                        Object temp = x.getCellEditorValue(); //Extract new value.
                        mode = -1;
                        if (tablemodification == 1) { //Simple bandera.
                            tablemodification = 0; //Making sure bandera resets
                            if (oldcellvalue.toString().equals(temp.toString())) { //If the same value is detected
                                System.out.println("Same Cell Value detected: " + oldcellvalue); // Dont change anything
                                System.out.println("No export Requiered.");
                            } else { // If new value is detected: 
                                System.out.println("Different Cell Value Detected:" + temp);
                                System.out.println("Column: " + currentColumn);
                                //DefaultTableModel temasdasd = Table.getModel();
                                int type = Integer.parseInt(((Campo)currentFile.getCampos().get(currentColumn)).getTipo()); //Extract the type of the value from metadata that it should have.
                                try { // Attempt to convert it to see if it is workable.

                                    Object assignation = null; //Basicamente solo es para que ocurra la exception validadora pero no hace nada.
                                    if (type == 1) {
                                        assignation = Integer.parseInt(temp.toString());
                                    } else if (type == 2) {
                                        assignation = Long.parseLong(temp.toString());
                                    } else if (type == 3) {
                                        assignation = temp.toString();
                                    } else if (type == 4) {
                                        assignation = temp.toString().charAt(0);
                                    }
                                    ArrayList TrimaExport = new ArrayList(); //ArrayList que se le manda a Trimarchi cuando se detecta un cambio en el registro.
                                    for (int i = 0; i < currentFile.getCampos().size(); i++) {
                                        if (i == currentColumn) {
                                            TrimaExport.add(assignation);
                                        } else {
                                            TrimaExport.add(jt_Registros.getValueAt(currentRow, i));

                                        }

                                    }
                                    System.out.println("########################################################");
                                    System.out.println("Exportar a Trima valores: " + TrimaExport);
                                    //Apartir de aqui se exporta el nuevo valor del registro. AKA TrimaExport.
                                    //Export to Trima Here.
                                    if (currentColumn == 0) {
                                        JOptionPane.showMessageDialog(null, " No se puede modificar la primary key");
                                        jt_Registros.setValueAt(oldcellvalue, currentRow, currentColumn);
                                    } else {
                                        ModificarDatoArchivo(TrimaExport);//Exportando A Metodo Trima
                                    }

                                } catch (Exception exc) { //If it fails to convert then replace new value with old value.
                                    jt_Registros.setValueAt(oldcellvalue, currentRow, currentColumn);
                                    JOptionPane.showMessageDialog(null, "Incompatible data type. Original value was set.");
                                }

                            }

                        } //End if of modification bandera.

                    }

                    @Override
                    public void editingCanceled(ChangeEvent e) {

                    }
                });

                x.removeCellEditorListener(jt_Registros);

                /*tablemodification = 1;
            currentRow = Table.getEditingRow();
            currentColumn = Table.getEditingColumn();
            oldcellvalue = Table.getValueAt(currentRow, currentColumn).toString();
            System.out.println("Original Value: " + oldcellvalue);*/
            }
        } catch (Exception e) {
            System.out.println("FATAL ERROR. Expect Table Failures");
        }

        /*else if (tablemodification == 1) {
            tablemodification = 0;
            if (currentRow == Table.getSelectedRow() && currentColumn == Table.getSelectedColumn()) {
                if (oldcellvalue != Table.getValueAt(currentRow, currentColumn).toString()) {
                    System.out.println("Different Cell value detected.");
                } else {
                    System.out.println("Same Cell value detected.");
                }
                System.out.println("Cell value finished editing.");
            }

        }*/
    }//GEN-LAST:event_jt_RegistrosPropertyChange
    private void CrearRegistro() {
        Object[] insertarray = new Object[currentFile.getCampos().size()];
        for (int i = 0; i < currentFile.getCampos().size(); i++) {
            if (((Campo)currentFile.getCampos().get(i)).getTipo().equals("int")) {
                String formato = "";
                for (int j = 0; j < campos.get(i).getLongitud(); j++) {
                    formato+="#";
                }
                try {
                    jf_Integer.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter(formato)));
                } catch (java.text.ParseException ex) {
                    ex.printStackTrace();
                }
                jl_Integer.setText(campos.get(i).getNombre());
                jp_Integer.setValue(i);
                jd_IntroducirInteger.pack();
                jd_IntroducirInteger.setModal(true);
                jd_IntroducirInteger.setLocationRelativeTo(this);
                jd_IntroducirInteger.setVisible(true);
                insertarray[i] = Integer.parseInt(jf_Integer.getText());
            }else{
                jl_string.setText(campos.get(i).getNombre());
                jp_progreso.setValue(i);
                jd_IntroducirString.pack();
                jd_IntroducirString.setModal(true);
                jd_IntroducirString.setLocationRelativeTo(this);
                jd_IntroducirString.setVisible(true);
                insertarray[i] = jt_String.getText();
            }
            jt_String.setText("");
            jf_Integer.setText("");
        }
        jd_Registros.setVisible(true);
        ArrayList Nuevo_Registro = new ArrayList();
        try {
            raFile = new RandomAccessFile(file,"rw");
        } catch (FileNotFoundException ex) {
            
        }
        for (int i = 0; i < insertarray.length; i++) {
            Nuevo_Registro.add(insertarray[i]);
        }
        //Export to Trima in this line.
        Registro temporal = new Registro(Integer.parseInt(insertarray[0].toString()));

        if (currentFile.ArbolB.search(temporal) == null) {
           
                currentFile.ArbolB.insert(temporal);
                System.out.println(temporal);
                currentFile.addnumregistros();
                try {
                  EscribirDatosRegistro(Nuevo_Registro);//Send Array to Trima
                  BuscarDatoArchivo(temporal);
                } catch (Exception ex) {
                    //Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                    // System.out.println(ex);
                    //ex.printStackTrace();
                }
        } else {
            JOptionPane.showMessageDialog(null, "Una Instancia del Registro ya existe.");
        }

        //Temp();
    }
    public static void exportXML(ArrayList Campos, ArrayList Regs, String Direccion) {
        Document document = null;
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        try {
            DocumentBuilder builder = factory.newDocumentBuilder();
            DOMImplementation implementation = builder.getDOMImplementation();
            document = implementation.createDocument(null, "xml", null);
            //Arraylist de campos

            for (int i = 0; i < Regs.size(); i++) {
                Element registro = document.createElement("Registro" + i);
                document.getDocumentElement().appendChild(registro);
                ArrayList<Element> elementos = new ArrayList();

                for (int j = 0; j < Campos.size(); j++) { //Llenando arraylist de elementos campos
                    Element campos = document.createElement(Campos.get(j).toString());
                    elementos.add(campos);
                }

                for (int h = 0; h < elementos.size(); h++) {
                    registro.appendChild(elementos.get(h));
                    Text valorCampo = document.createTextNode(Regs.get(h).toString());
                    elementos.get(h).appendChild(valorCampo);
                    document.setXmlVersion("1.0");

                }
            }
            TransformerFactory transformerFactory = TransformerFactory.newInstance();
            Transformer transformer = transformerFactory.newTransformer();

            // Archivo donde almacenaremos el XML
            File archivo = new File(Direccion + ".xml");

            // Fuente de datos, en este caso el documento XML
            DOMSource source = new DOMSource(document);
            // Resultado, el cual almacena en el archivo indicado
            StreamResult result = new StreamResult(archivo);
            // Transformamos de ña fuente DOM a el resultado, lo que almacena todo en el archivo
            transformer.transform(source, result);
            //System.out.println("Ended");
        } catch (Exception e) {
            // Logger.getLogger(TreeTest2.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("COULD NOT EXPORT PROBABLY DIRTY EXPORTER STRING.");

        }
    }
    
    public void InsertarRegistroTabla(ArrayList<Object> recordInsert) throws IOException, ClassNotFoundException {
        /*TableModel model = Table.getModel();
        DefaultTableModel modelo = (DefaultTableModel) model;
        metadata.addnumregistros();

        Object insertArray[] = KennethExport2.toArray();

        modelo.addRow(insertArray);

        Table.setModel(model);*/
        DefaultTableModel model = (DefaultTableModel)jt_Registros.getModel();
        currentFile.addnumregistros();
        
        Object row[] = recordInsert.toArray();
        model.addRow(row);
        jt_Registros.setModel(model);
            
        
    }
    
    public void BuildTable(int funcion) {
        if (funcion == 0) { //Instruction 0 lets the Table Builder know it should only change headers.
            
            for (int i = 0; i < currentFile.getCampos().size(); i++) {
                if(((Campo)currentFile.getCampos().get(i)).isLlave_primaria() && i != 0)
                    Collections.swap(currentFile.getCampos(), 0, i);
            }
            Object[] campos = currentFile.getCampos().toArray();
            DefaultTableModel tabla = new DefaultTableModel();
            tabla.setColumnCount(campos.length);
            
            tabla.setColumnIdentifiers(campos);
            jt_Registros.setModel(tabla);
            //Table.updateUI();
        } else if (funcion == 1) { //Instruction 1 lets the Table Builder clean all models loaded.
           jt_Registros.setModel(modeloLimpio);
        }

    }
    
    public void CargarMetadatos() throws ClassNotFoundException {
        try {
            // System.out.println("????????????????");
            raFile = new RandomAccessFile(file, "rw");
            int tamaño = raFile.readInt();
            //System.out.println(tamaño + " SIZEEEEEEEE");
            byte[] data = new byte[tamaño];
            raFile.read(data);
            ByteArrayInputStream in = new ByteArrayInputStream(data);
            ObjectInputStream read = new ObjectInputStream(in);
            currentFile = (Metadata) read.readObject();//read the byte array
            currentFile.setSizeMeta(tamaño);
        } catch (IOException ex) {
            // Logger.getLogger(Trima.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void LoadFile() {
        FileSuccess = 0;
        String direction;

        //Creo un nuevo JFileChooser para que eliga donde guardar.
        //Le digo que aparezca en el home del proyecto .. Crea un problema que la Metadata se puede guardar en cualquier sitio.
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("./"));
        FileNameExtensionFilter data = new FileNameExtensionFilter("DAT FILE", "dat");
        fileChooser.setFileFilter(data);
        int seleccion = fileChooser.showOpenDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) { //Cuando le da guardar
            //System.out.println(fileChooser.getCurrentDirectory().toString());
            File file = null;
            // FileOutputStream fos = null;
            // ObjectOutputStream ous = null;
            try {
                if (fileChooser.getFileFilter().getDescription().equals("DAT FILE")) { //Chequea si lo que quiere guardar es DAT FILE
                    direction = fileChooser.getSelectedFile().getPath() + ".dat";
                    file = fileChooser.getSelectedFile();
                    currentFile.setArchivo(file);
                    JOptionPane.showMessageDialog(null, "Sucess!");
                    System.out.println("Length of Loaded File: " + (file.length() - 4)); //SIZE MENOS BUFFER.
                    FileSuccess = 1;
                } else {
                    JOptionPane.showMessageDialog(this, "Unable to Load. Use DAT FILE.");
                }
                // fos = new FileOutputStream(file);
                //  ous = new ObjectOutputStream(fos);
                //  ous.flush(); //Lo oficializo

                // raFile=new RandomAccessFile(file,"rw");
            } catch (Exception e) {
                //e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Something Went Wrong! Contact System Administrator.");
            }
            try {
                //ous.close();
                // fos.close();
            } catch (Exception e) {
                //e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Fatal error closing files.");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Operation aborted!");
        }
    }
    private void CreateFile() {
        //Borro lo que tengo en la metadata
        //metadata = new Metadata();
        //Le digo a la tabla que se borre.
        //BuildTable(metadata, 1);
        //OUTPUT TESTS ----- IGNORE

        // Output Tests ------ IGNORE.
        FileSuccess = 0;
        String direction;
        //Creo un nuevo JFileChooser para que eliga donde guardar.
        //Le digo que aparezca en el home del proyecto .. Crea un problema que la Metadata se puede guardar en cualquier sitio.
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("./"));
        FileNameExtensionFilter data = new FileNameExtensionFilter("DAT FILE", "dat");
        fileChooser.setFileFilter(data);
        int seleccion = fileChooser.showSaveDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) { //Cuando le da guardar
            //System.out.println(fileChooser.getCurrentDirectory().toString());
            File file = null;
            FileOutputStream fos = null;
            ObjectOutputStream ous = null;
            try {
                if (fileChooser.getFileFilter().getDescription().equals("DAT FILE")) { //Chequea si lo que quiere guardar es DAT FILE
                    direction = fileChooser.getSelectedFile().getPath().toString() + ".dat";
                    System.out.println(direction);
                    direction = direction.replace(".dat", "");
                    System.out.println(direction);
                    direction += ".dat";
                    System.out.println(direction);
                    file = new File(direction);
                    if (file.length() == 0) { //Revisa que este vacio.                    
                        this.file = new File(direction);
                        JOptionPane.showMessageDialog(this, "Success!\n All unsaved progress was Lost!");

                    } else if (file.exists()) { //Si ya existe entonces lo vuelve a crear. PERO VACIO.
                        file.delete();
                        file.createNewFile();
                        this.file = new File(direction);
                        JOptionPane.showMessageDialog(this, "File OverWritten, New Length: " + file.length());
                    }
                    FileSuccess = 1;
                } else {
                    JOptionPane.showMessageDialog(this, "Unable to save. Use DAT FILE.");
                }
                fos = new FileOutputStream(file);
                ous = new ObjectOutputStream(fos);
                ous.flush(); //Lo oficializo

                System.out.println("FILE LENGTH: " + (file.length() - 4)); //SIZE MENOS BUFFER.

                // raFile=new RandomAccessFile(file,"rw");
            } catch (Exception e) {
                //e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Something Went Wrong! Contact System Administrator.");
            }
            try {
                ous.close();
                fos.close();
            } catch (Exception e) {
                //e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Fatal error closing files.");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Operation aborted!");
        }
        //End of FileChooserIf 
    }
    public void EscribirMetadatos() throws IOException {
        raFile = new RandomAccessFile(file, "rw");
        ByteArrayOutputStream obArray = new ByteArrayOutputStream();
        ObjectOutputStream objeto = new ObjectOutputStream(obArray);
        //objeto.writeObject(currentFile.getCampos());
        byte[] datos = obArray.toByteArray();//makes an array of bytes from the object
        raFile.seek(0);//Place pointe at the beggining of the file
        raFile.writeInt(datos.length);
        raFile.write(datos);
        //raFile.setLength(7500);
        currentFile.setSizeMeta((int) raFile.length());
        System.out.println("ESTE ES EL SIZE DE LOS METADATOS..." + datos.length);

    }
    
    public void EscribirDatosRegistro(ArrayList<Object> info_registro) {

        try {
            System.out.println("=========================================");
            if (AvailList.head != null) {
                System.out.println("EL AVAILIST TIENE DATOS!!! VER SI ENCUENTRA CUPO....");
                Data datos = new Data();
                Registro temporal = new Registro(Integer.parseInt(info_registro.get(0).toString()));
                long byteOffset = raFile.length();
                System.out.println("ByteOffset:: " + byteOffset);
                Bnode d = currentFile.getArbolB().search(temporal);
                int x = searchEnNodo(d, temporal.getKey());

                d.key[x].setByteOffset(byteOffset);
                datos.setDatos(info_registro);//Alistando para guardar arraylist de objetos en el archivo
                datos.setUbicacion(byteOffset);//clase datos que guarda ubiacion

                ByteArrayOutputStream obArray = new ByteArrayOutputStream();
                ObjectOutputStream objeto = new ObjectOutputStream(obArray);
                objeto.writeObject(datos);

                byte[] dat = obArray.toByteArray();
                int required_size = dat.length;
                AVL.Node espacio = AvailList.SearchSpace(required_size);
                if (espacio == null) {
                    System.out.println("NO ENCONTRO ESPACIO, NO CABE");
                    raFile.seek(byteOffset);//Place pointe at the beggining of the file
                    raFile.writeInt(dat.length);
                    raFile.write(dat);
                } else {
                    System.out.println("SI ENCONTROO ESPACIO!!! ENTRO");
                    //System.out.println("Esta es la POSICION: " + espacio.posicion);
                    datos.setUbicacion(espacio.posicion);
                    System.out.println("Espacio encontrado: " + espacio.data + " ----- Tamaño del Registro a Insertar: " + dat.length);
                    int j = 0;
                    for (int i = 0; i < (espacio.data - dat.length); i++) {//El for lo que hace es meter caracteres para igualar los size de ambos
                        datos.setSize_alter(datos.getSize_alter() + "|");
                        //System.out.print("ENTRO Cuantas Veces??");
                        j++;
                    }

                    obArray = new ByteArrayOutputStream();
                    objeto = new ObjectOutputStream(obArray);
                    objeto.writeObject(datos);
                    dat = obArray.toByteArray();
                    d.key[x].setByteOffset(datos.ubicacion);
                    System.out.println("Espacio Size: " + espacio.data + "--- New Size: " + dat.length);
                    System.out.println("    Esta es la Ubicacion..... " + datos.ubicacion);

                    raFile.seek(datos.ubicacion);
                    raFile.writeInt(dat.length);
                    raFile.write(dat);
                    AvailList.deleteNode(AvailList.head, espacio);
                }
            } else {
                System.out.println("EL AVAILLIST ESTA VACIO ENTONCES INGRESA NORMAL");
                Data datos = new Data();
                Registro temporal = new Registro(Integer.parseInt(info_registro.get(0).toString()));
                long byteOffset = raFile.length();
                System.out.println("ByteOffset:: " + byteOffset);
                Bnode d = currentFile.getArbolB().search(temporal);
                int x = searchEnNodo(d, temporal.getKey());

                d.key[x].setByteOffset(byteOffset);
                datos.setDatos(info_registro);//Alistando para guardar arraylist de objetos en el archivo
                datos.setUbicacion(byteOffset);//clase datos que guarda ubiacion

                ByteArrayOutputStream obArray = new ByteArrayOutputStream();
                ObjectOutputStream objeto = new ObjectOutputStream(obArray);
                objeto.writeObject(datos);
                byte[] dat = obArray.toByteArray();//makes an array of bytes from the object
                raFile.seek(byteOffset);//Place pointe at the beggining of the file
                raFile.writeInt(dat.length);
                raFile.write(dat);
                System.out.println("ESTE ES EL SIZE DEL REGISTRO..." + dat.length);
            }

        } catch (IOException | NumberFormatException ex) {
            // System.out.println("Tiene errrrrrrrroooooooooooooooor");
            //ex.printStackTrace();
        }

    }
    
    public void LeerDatosRegistro() throws ClassNotFoundException {
        try {//Este metodo quedara available cuando Se habilite la fncion Load File
            System.out.println("=========================================");
            System.out.println("Cargando Registros a la Table");

            raFile = new RandomAccessFile(file, "rw");
            raFile.seek(0);
            int tamaño = raFile.readInt();
            raFile.seek(tamaño + 4);
            //System.out.println(tamaño);
            boolean eliminado = false;//boolen que marca que el registro leido esta eliminado
            while (raFile.getFilePointer() < raFile.length()) {
                System.out.println("----------------------------------------------");
                eliminado = false;
                tamaño = raFile.readInt();
                System.out.println("New Tamaño: " + tamaño);
                byte[] data = new byte[tamaño];
                raFile.read(data);
                ByteArrayInputStream in = new ByteArrayInputStream(data);
                ObjectInputStream read = new ObjectInputStream(in);
                Data d = (Data) read.readObject();//guardo el array de bytes en una variable temporal
                if (d.getMarcado().contains("*")) {//If que verifica que si el registro esta eliminado
                    eliminado = true;//si entra significa que si
                    System.out.println("ENCONTRO EL REGISTRO BORRADO... " + d.getDatos().get(1) + " Ubicacion...." + d.getUbicacion());
                    AvailList.BestFit(tamaño, d.ubicacion);

                } else {//entra al else cuando NO ETSA ELIMINADO
                    ArrayList<Object>record = new ArrayList<>();
                    Registro temporal = new Registro(d.getKey());
                    temporal.setByteOffset(d.getUbicacion());
                    currentFile.getArbolB().insert(temporal);
                    System.out.println("SE VA A METER A: " + d.getDatos().get(1) + " Ubicacion: " + d.getUbicacion());
                    for (int i = 0; i < d.getDatos().size(); i++) {
                        record.add(d.getDatos().get(i));

                    }
                    
                    InsertarRegistroTabla(record);
                    

//Agrego un registro con el mismo formato que me fue enviado para implementarlo en la table
                    //Arraylist Lista para agarrar Registros
                    //GRAB Global Array!!!! XD 
                }

            }
            currentFile.ArbolB.traverse();
            currentFile.ArbolB.PrintLevels();
        } catch (IOException ex) {
            //ex.printStackTrace();
            //System.out.println("ERrrrrrrrrrrrrrrrrrrrrrrrrrrrrrroooooooooooooooooorr");
        }
    }
    
     public Data BuscarDatoArchivo(Registro r) throws IOException, ClassNotFoundException {//Metodo para Buscar El Registro en el Archivo
        if (currentFile.getArbolB().search(r) != null) {//Solo uso la key del Arbol y lo pido de forma constante al Randomaccesfile
            Bnode contenido = currentFile.getArbolB().search(r);
            int pos = searchEnNodo(contenido, r.getKey());
            long byteOffset = contenido.key[pos].byteOffset;
            raFile.seek(byteOffset);
            int tamaño = raFile.readInt();
            byte[] data = new byte[tamaño];
            raFile.read(data);
            ByteArrayInputStream in = new ByteArrayInputStream(data);
            ObjectInputStream read = new ObjectInputStream(in);
            Data d = (Data) read.readObject();//guardo el array de bytes en una variable temporal

            return d;
        } else {
            System.out.println("No se encontro el Nodo");

            return null;
        }

    }
     
     public void EliminarDatoArchivo(ArrayList<Object> TrimaExport) {

        try {
            Registro temporal = new Registro(Integer.parseInt(TrimaExport.get(0).toString()));
            if (BuscarDatoArchivo(temporal) != null) {
                System.out.println("===========================================================");
                System.out.println("ELIMANDO NODO...");
                Data temp = BuscarDatoArchivo(temporal);
                raFile.seek(temp.ubicacion);
                int size_act = raFile.readInt();//Este es el tamaño actual
                temp.setMarcado("*"); //Pone un aterisco que marca ese registro o dato como eliminado
                temp.marcado = "*";
                Bnode b = currentFile.ArbolB.search(temporal);
                int pos = searchEnNodo(b, temporal.key);
                long ubicacion = b.key[pos].getByteOffset();
                temp.ubicacion = ubicacion;

                ByteArrayOutputStream obArray = new ByteArrayOutputStream();
                ObjectOutputStream objeto = new ObjectOutputStream(obArray);

                obArray = new ByteArrayOutputStream();
                objeto = new ObjectOutputStream(obArray);
                objeto.writeObject(temp);

                byte[] dat2 = obArray.toByteArray();
                System.out.println(temp.marcado + " ----------------------------" + temp.ubicacion);
                raFile.write(dat2);

                System.out.println("LLamar metodo del AvailList...");
                AvailList.BestFit(size_act, temp.ubicacion);
                AvailList.PrintList(AvailList.head);
                System.out.println("Antes de Borrar el Registro...." + currentFile.ArbolB.search(temporal));
                currentFile.ArbolB.remove(temporal);
                System.out.println("Despues de Borrar el Registro...." + currentFile.ArbolB.search(temporal));
                System.out.println("===========================================================");
                //Avai

            }
        } catch (Exception ex) {
            //ex.printStackTrace();
        }
    }
     
     public void ModificarDatoArchivo(ArrayList<Object> TrimaExport) {
        try {
            Registro temporal = new Registro(Integer.parseInt(TrimaExport.get(0).toString()));
            if (BuscarDatoArchivo(temporal) != null) {
                System.out.println("===========================================================");
                System.out.println("MODIFICANDO NODO...");
                Data temp = BuscarDatoArchivo(temporal);
                temporal.setByteOffset(temp.ubicacion);
                raFile.seek(temp.ubicacion);
                int size_act = raFile.readInt();//Este es el tamaño actual

                Data new_size = new Data();
                new_size.setKey((int) TrimaExport.get(0));
                new_size.setDatos(TrimaExport);
                new_size.setUbicacion(temp.getUbicacion());
                ByteArrayOutputStream obArray = new ByteArrayOutputStream();
                ObjectOutputStream objeto = new ObjectOutputStream(obArray);
                objeto.writeObject(new_size);
                byte[] dat = obArray.toByteArray();

                System.out.println("NEW SIZE" + dat.length + " ---- " + "SIZE ORIGINAL:" + size_act);
                if (dat.length <= size_act) {//Este if permite entrar si es mas peqeño
                    System.out.println("EL NUEVO REGISTRO ES MAS PEQUEÑO O IGUAL, SE ADAPATARA PARA QUE SEAN DEL MISMO TAMAÑO SI ES NECESARIO");
                    for (int i = 0; i < (size_act - dat.length); i++) {//El for lo que hace es meter caracteres para igualar los size de ambos
                        new_size.setMarcado(new_size.getMarcado() + "|");
                    }//Igualo los size para solo pegar el nuevo dato sobre el viejo y asi no generar errores
                    obArray = new ByteArrayOutputStream();
                    objeto = new ObjectOutputStream(obArray);
                    objeto.writeObject(new_size);
                    dat = obArray.toByteArray();//Actulizando 
                    raFile.write(dat);
                    System.out.println("NEW SIZE" + dat.length + " ---- " + "SIZE ORIGINAL:" + size_act);
                } else {
                    System.out.println("EL NUEVO REGISTRO ES MUY GRANDE IRA AL FINAL DEL ARCHIVO");
                    temp.setMarcado("*"); //Pone un aterisco que marca ese registro o dato como eliminado
                    obArray = new ByteArrayOutputStream();
                    objeto = new ObjectOutputStream(obArray);
                    objeto.writeObject(temp);
                    byte[] dat2 = obArray.toByteArray();
                    raFile.write(dat2);

                    //ESPACIO RESERVADO PARA EL AVAILlIST
                    long byteOffset = raFile.length();

                    new_size.setUbicacion(byteOffset);
                    obArray = new ByteArrayOutputStream();
                    objeto = new ObjectOutputStream(obArray);
                    objeto.writeObject(new_size);
                    dat = obArray.toByteArray();

                    raFile.seek(byteOffset);//ahora nos vamos al final de archivo a poner el El registro ya que es muy grande
                    raFile.writeInt(dat.length);
                    raFile.write(dat);

                    Bnode tmp = currentFile.getArbolB().search(temporal);
                    int ubicacion = searchEnNodo(tmp, temp.getKey());
                    tmp.key[ubicacion].byteOffset = byteOffset;

                    System.out.println("LLamar metodo del AvailList...");
                    AvailList.BestFit(size_act, temporal.byteOffset);
                    AvailList.PrintList(AvailList.head);
                    System.out.println("Antes de Borrar el Registro...." + currentFile.ArbolB.search(temporal));
                    System.out.println("Despues de Borrar el Registro...." + currentFile.ArbolB.search(temporal));
                    System.out.println("");

                    System.out.println("Key: " + tmp.key[ubicacion].key + " ------------------ ByteOfsset" + tmp.key[ubicacion].byteOffset);

                    //Espera implementarse mas adelante
                }
                System.out.println("OPERACION REALIZADA EXITOSAMENTE");
                System.out.println("===========================================================");
            }
        } catch (Exception ex) {
            //Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     
     public int searchEnNodo(Bnode d, int key) {//Como mi arbol devulve el nodo en que se ubica el Registro
        int pos = 0;
        //Este Metodo me dije la posicion en la que se encuentra en el Nodo.
        if (d != null) {
            for (int i = 0; i < d.n; i++) {//for que busca en el nodo la llave y le agrega el byte donde se ubica en el archivo
                if (d.key[i].getKey() == key) {
                    break;
                } else {
                    pos++;
                }
            }
        } else {
            // System.out.println("PORQUE ESSS NULLLLLL?????????????????????????????");
        }
        return pos;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana_Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bg_InfoTipoDatos;
    private javax.swing.ButtonGroup bg_LlaveCandidata;
    private javax.swing.ButtonGroup bg_LlavePrimaria;
    private javax.swing.ButtonGroup bg_TipoDeVariable;
    private javax.swing.JButton bt_Cargar;
    private javax.swing.JButton bt_Cerrar;
    private javax.swing.JButton bt_Nuevo;
    private javax.swing.JButton bt_Salvar;
    private javax.swing.JButton bt_cruzar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton jb_Archivo;
    private javax.swing.JButton jb_BorrarCampos;
    private javax.swing.JButton jb_BorrarRegistros;
    private javax.swing.JButton jb_BuscarRegistros;
    private javax.swing.JButton jb_CampoModificar;
    private javax.swing.JButton jb_Campos;
    private javax.swing.JButton jb_CrearArchivoXML;
    private javax.swing.JButton jb_CrearCampo;
    private javax.swing.JButton jb_CrearIndice;
    private javax.swing.JButton jb_EliminarCampoSelec;
    private javax.swing.JButton jb_Estandarizacion;
    private javax.swing.JButton jb_ExportarExcel;
    private javax.swing.JButton jb_ExportarlXMLconSch;
    private javax.swing.JButton jb_Indices;
    private javax.swing.JButton jb_InfoAceptarCambiosDatos;
    private javax.swing.JButton jb_IntroducirRegistros;
    private javax.swing.JButton jb_ListarCampos;
    private javax.swing.JButton jb_ListarRegistros;
    private javax.swing.JButton jb_ModificarCampos;
    private javax.swing.JButton jb_ModificarRegistros;
    private javax.swing.JButton jb_ReIndexarArchivos;
    private javax.swing.JButton jb_Registros;
    private javax.swing.JButton jb_RegresaDeEliminarCampos;
    private javax.swing.JButton jb_RegresarDeCampos;
    private javax.swing.JButton jb_RegresarDeCrearCampo;
    private javax.swing.JButton jb_RegresarDeDatosCampo;
    private javax.swing.JButton jb_RegresarDeListarC;
    private javax.swing.JButton jb_RegresardeTablaRegistro;
    private javax.swing.JButton jb_Salir1;
    private javax.swing.JButton jb_SalirDeRegistros;
    private javax.swing.JButton jb_SalirdeCampos;
    private javax.swing.JButton jb_TerminarCreacionCampo;
    private javax.swing.JButton jb_eliminarRegistro;
    private javax.swing.JDialog jd_Archivo;
    private javax.swing.JDialog jd_BuscarRegistros;
    private javax.swing.JDialog jd_Campos;
    private javax.swing.JDialog jd_CrearCampo;
    private javax.swing.JDialog jd_DatosDelCampo;
    private javax.swing.JDialog jd_EliminarCampos;
    private javax.swing.JDialog jd_Estandarizacion;
    private javax.swing.JDialog jd_IntroducirInteger;
    private javax.swing.JDialog jd_IntroducirRegistros;
    private javax.swing.JDialog jd_IntroducirString;
    private javax.swing.JDialog jd_ListarCampos;
    private javax.swing.JDialog jd_MBL;
    private javax.swing.JDialog jd_ModificarCampo;
    private javax.swing.JDialog jd_NameParaXML;
    private javax.swing.JDialog jd_Registros;
    private javax.swing.JDialog jd_indices;
    private javax.swing.JDialog jd_nombre;
    private javax.swing.JFormattedTextField jf_Integer;
    private javax.swing.JLabel jl_Integer;
    private javax.swing.JLabel jl_longitud;
    private javax.swing.JLabel jl_nameCampo;
    private javax.swing.JLabel jl_string;
    private javax.swing.JLabel jl_tipodevariable;
    private javax.swing.JProgressBar jp_Integer;
    private javax.swing.JProgressBar jp_progreso;
    private javax.swing.JSpinner js_InfoLongitudCampo;
    private javax.swing.JTable jt_Campos;
    private javax.swing.JTable jt_EliminarCampos;
    private javax.swing.JTable jt_ListaDeCampos;
    private javax.swing.JTextField jt_NombreXML;
    private javax.swing.JTable jt_Registros;
    private javax.swing.JTextField jt_String;
    private javax.swing.JLabel label_llaveCandi;
    private javax.swing.JLabel label_llavePrim;
    private javax.swing.JRadioButton rb_InfoIntegerCampo;
    private javax.swing.JRadioButton rb_InfoStringCampo;
    private javax.swing.JRadioButton rb_cand_no;
    private javax.swing.JRadioButton rb_cand_si;
    private javax.swing.JRadioButton rb_key_no;
    private javax.swing.JRadioButton rb_key_si;
    private javax.swing.JRadioButton rb_tip_integer;
    private javax.swing.JRadioButton rb_tip_string;
    private javax.swing.JSpinner sp_LongitudCampo;
    private javax.swing.JTextField tf_InfoNombreCampo;
    private javax.swing.JTextField tf_NombredelCampo;
    private javax.swing.JTextField tf_nombreArchivo;
    // End of variables declaration//GEN-END:variables
    ArrayList<Campo> campos = new ArrayList();
    Metadata currentFile;
    
    AVL AvailList = new AVL();
    File file;
    Excel excel;
    JTable Tabla;
    RandomAccessFile raFile;
    TableModel modeloLimpio;
    int mode = -1;
    int rowRemoval;
    int tablemodification = 0; //Int bandera , Table awareness for modification.
    Object oldcellvalue; // Old cell value that is being modified live on table. Might be null.
    int currentRow;
    int currentColumn;
    boolean ExisteLlavePrim;
    int FileSuccess;

}
